---
- name: make sure git is installed
  package: name=git

# set up system to perform last-mile configuration after first boot
# skip if there's no playbook repo set.
- name: install post-imaging playbook for use later
  git:
    repo: '{{ bootstrap_playbook_repo }}'
    dest: '{{bootstrap_playbook_path}}'
    accept_hostkey: 'yes'
    key_file: '{{ bootstrap_playbook_keyfile | default(omit) }}'
  when: 'bootstrap_playbook_repo != ""'

- name: create playbook directory when not cloning repo
  file:
    path: '{{bootstrap_playbook_path}}'
    mode: 'u=rw,g=r,o=r'
    state: directory
  when: 'bootstrap_playbook_repo == ""'

- name: write playbook file when not cloning repo
  copy:
    dest: '{{bootstrap_playbook_path}}/playbook.yml'
    content: '{{bootstrap_playbook_content|to_yaml}}'
    mode: 'u=rw,g=r,o=r'
  when: 'bootstrap_playbook_repo == ""'

- name: write requirements file when not cloning repo (and there are reqs to write)
  copy:
    path: '{{bootstrap_playbook_path}}/requirements.yml'
    content: '{{bootstrap_playbook_requirements|to_yaml}}'
    mode: 'u=rw,g=r,o=r'
  when:
    - 'bootstrap_playbook_repo == ""'
    - 'bootstrap_playbook_requirements != []'

- name: check for requirements file in post-imaging playbook
  stat: path='{{bootstrap_playbook_path}}/requirements.yml'
  register: stat_reqs

- name: install post-imaging playbook pre-requisites
  command: 'ansible-galaxy install -r {{bootstrap_playbook_path}}/requirements.yml'
  when:
    - 'stat_reqs.stat.exists == True'

- name: drop vars file for post-launch playbook to use
  copy:
    content: '{{ bootstrap_playbook_vars | to_yaml }}'
    dest: '{{bootstrap_playbook_path}}_vars.yml'

# this will always fail under docker because systemd
- name: drop systemd service to do post-launch configuration
  include_role: name=tumf.systemd-service
  when: 'bootstrap_docker_testing != true'

- name: enable but don't start the post-launch service
  systemd:
    name: '{{ systemd_service_name }}'
    state: stopped
    enabled: yes
