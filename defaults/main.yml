---
# this playbook and its vars are set up as a startup service
# (ie: after image creation)
bootstrap_playbook_repo: ''
bootstrap_playbook_vars: {}
bootstrap_playbook_content:           # written to playbook.yml if repo is blank
  - name: Dummy playbook
    hosts: all
    connection: local
    become: true
    tasks:
      - debug:
          msg: "Empty bootstrap playbook is empty..."
bootstrap_playbook_requirements: []   # [{'src': 'inhumantsar.local-user'}, ...]. only used if repo is blank

# these probably don't need changing
bootstrap_playbook_path: '/opt/bootstrap/playbook'


# for the startup service
systemd_service_name: 'ansible-boot'
systemd_service_Unit_Description: 'Run ansible-pull at boot to do post-launch configuration'
# -b: become root (ie: run with sudo)
# -f: run even if the playbook repo couldn't be updated, for running behind firewalls
# -s 15: sleep a random amount of time between 0 and 15s to spread out git operations on large spin-ups
systemd_service_Service_ExecStart: |
  ansible-pull \
  -b -f -s 15 \
  -c local -i "localhost," \
  -e "@/opt/bootstrap/playbook_vars.yml" \
  -U {{ bootstrap_playbook_repo }} \
  -d /opt/bootstrap/playbook

# the systemd role fails under docker because d-bus operations aren't permitted.
# since it's reasonable to assume that the systemd role is tested (at least as far
# as we need it to be for basic CI. ANYWAY, this lets us ignore errors on the task.
bootstrap_docker_testing: false
